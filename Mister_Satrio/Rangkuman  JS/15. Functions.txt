
------------- JavaScript Functions -------------

   - Fungsi JavaScript adalah blok kode yang dirancang untuk melakukan tugas tertentu.
   - Fungsi JavaScript dijalankan ketika "sesuatu" memanggilnya (memanggilnya).
   Contohnya :
    function myFunction(p1, p2) {
      return p1 * p2;
    } 
  
  JavaScript Function Syntax(Sintaks Fungsi JavaScript)
  --------------------------
  -   Fungsi JavaScript didefinisikan dengan functionkata kunci, diikuti dengan nama , diikuti dengan tanda kurung () .
  - Nama fungsi dapat berisi huruf, angka, garis bawah, dan tanda dolar (aturannya sama seperti variabel).
  - Tanda kurung dapat menyertakan nama parameter yang dipisahkan dengan koma:
  - ( parameter1, parameter2, ... )
  - Kode yang akan dieksekusi, berdasarkan fungsi, ditempatkan di dalam tanda kurung kurawal: {}

  Contohnya :
      function name(parameter1, parameter2, parameter3) {
       // code to be executed
      } 

      - Parameter fungsi dicantumkan di dalam tanda kurung () dalam definisi fungsi.
      - Argumen fungsi adalah nilai yang diterima oleh fungsi saat dipanggil.
      - Di dalam fungsi, argumen (parameter) berperilaku sebagai variabel lokal.

      Function Invocation(Pemanggilan Fungsi)
      ---------------------------------------
      - Kode di dalam fungsi akan dijalankan ketika "sesuatu" memanggil (memanggil) fungsi tersebut:

          - Saat suatu peristiwa terjadi (saat pengguna mengklik tombol)
          - Ketika dipanggil (dipanggil) dari kode JavaScript
          - Secara otomatis (dipanggil sendiri)

          Function Return(Fungsi Kembali)
          --------------------------------
         - Ketika JavaScript mencapai sebuah returnpernyataan, fungsi tersebut akan berhenti dijalankan.

        - Jika fungsi dipanggil dari sebuah pernyataan, JavaScript akan "kembali" untuk mengeksekusi kode setelah pernyataan yang dipanggil.
        
        - Fungsi sering kali menghitung nilai kembalian . Nilai yang dikembalikan "dikembalikan" ke "penelepon":
         Contohnya : 
        -   Fungsi dipanggil, nilai yang dikembalikan akan berakhir di x
         let x = myFunction(4, 3);
         function myFunction(a, b) {
         // Fungsi mengembalikan produk a dan b
           return a * b;
         } 


         The () Operator
         ----------------
         Operator () memanggil (memanggil) fungsi:
         Contohnya : 
         function toCelsius(fahrenheit) {
            return (5/9) * (fahrenheit-32);
        }
        let value = toCelsius(77); 

        Functions Used as Variable Values(Fungsi yang Digunakan sebagai Nilai Variabel)
        ----------------------------------------
        Fungsi dapat digunakan dengan cara yang sama seperti Anda menggunakan variabel, dalam semua jenis rumus, tugas, dan penghitungan.

        Contohnya : 
      - Daripada menggunakan variabel untuk menyimpan nilai kembalian suatu fungsi:
        let x = toCelsius(77);
         let text = "The temperature is " + x + " Celsius";
      - Anda dapat menggunakan fungsinya secara langsung, sebagai nilai variabel:
       let text = "The temperature is " + toCelsius(77) + " Celsius"; 


      Local Variables (Variabel Lokal)
      -------------------------------
     - Variabel yang dideklarasikan dalam fungsi JavaScript, menjadi LOKAL pada fungsi tersebut.
     - Variabel lokal hanya dapat diakses dari dalam fungsi.
      Contohnya : 
     // kode di sini TIDAK bisa menggunakan carName
     function myFunction() {
       let carName = "Volvo";
       // kode di sini BISA menggunakan carName
     }
     - Karena variabel lokal hanya dikenali di dalam fungsinya, variabel dengan nama yang sama dapat digunakan dalam fungsi yang berbeda.
    - Variabel lokal dibuat ketika suatu fungsi dimulai, dan dihapus ketika fungsi tersebut selesai.